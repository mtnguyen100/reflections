1. What happens when you initialize a repository? Why do you need to do it?
	- It creates a new repository to store my commits to files
	- Allows me to see my history and metadata of these files

2. How is the staging area different from the working directory and the repository? What value do you think it offers?
	- It allows you to see what files you are going to commit with
	- It is different from the working directory and repostory in that it shows files in both the working directory and the repository

3. How can you use the staging area to make sure you have one commit per logical change?
	- Only use git add for the files that are involved in the logical change, then commit
		- You can then use git add for other files for other logical changes, as the staging area is cleared after a commit

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	- When you're trying to implement a new feature to a project but aren't sure if it will work or be appropriate just yet
	- When multiple people are working on the same project
		- People can make their own branches so they can keep track of their work, so the original code doesn't get disorganized

5. How do the diagrams help you visualize the branch structure?
	- It allows me to see how updated certain branches are with respect to the master branch
		- It also allows me to see if these branches are compatible with the master branch